generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id        Int        @id @default(autoincrement())
  name      String
  email     String?    @unique
  password  String?    @default("")
  quizzes   Quizz[]
  responses Response[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt
}

model Quizz {
  id         Int        @id @default(autoincrement())
  questions  Question[]
  estimation Float?
  Client     Client?    @relation(fields: [clientId], references: [id])
  clientId   Int?
  type       QuizzType?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now()) @updatedAt
}

model Question {
  id        Int         @id @default(autoincrement())
  question  String
  quizz     Quizz[]
  type      QuizzType[]
  options   String[]
  t         String
  reponses  Response[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now()) @updatedAt
}

model Response {
  id         Int       @id @default(autoincrement())
  response   String
  Question   Question? @relation(fields: [questionId], references: [id])
  questionId Int?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now()) @updatedAt
  Client     Client?   @relation(fields: [clientId], references: [id])
  clientId   Int?
}

enum QuizzType {
  BASIC
  ADVANCED
}

model Marque {
  id      Int      @id @default(autoincrement())
  marque  String
  modeles Modele[]
}

model Modele {
  id       Int     @id @default(autoincrement())
  modele   String
  Marque   Marque? @relation(fields: [marqueId], references: [id])
  marqueId Int?
}
